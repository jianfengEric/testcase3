
CREATE TRIGGER TRIGGER_ANA_ACCOUNT_AFTER_INSERT AFTER INSERT ON ANA_ACCOUNT FOR EACH ROW
BEGIN
DECLARE action VARCHAR(4);
set action = 'C';
INSERT INTO ANA_ACCOUNT_AUD
     (ACCOUNT_ID,ACCOUNT,FIRST_NAME,LAST_NAME,PASSWORD,EMAIL,MOBILE,LANGUAGE,CREATED_TIME,CREATED_BY,
       UPDATED_BY,UPDATED_TIME,IP_ADDRESS,INTERNAL,EXTERNAL_GROUP_ID,VERIFY_EMAIL_TYPE,OPTIMISTICLOCKVERSION,
       STATUS,USER_TYPE,DEPARTMENT_ID,MERCHANT_ID,ACTION,ACTION_TIME)
       VALUES
      (NEW.ID,NEW.ACCOUNT,NEW.FIRST_NAME,NEW.LAST_NAME,NEW.PASSWORD,NEW.EMAIL,NEW.MOBILE,NEW.LANGUAGE,NEW.CREATED_TIME,NEW.CREATED_BY,
       NEW.UPDATED_BY,NEW.UPDATED_TIME,NEW.IP_ADDRESS,NEW.INTERNAL,NEW.EXTERNAL_GROUP_ID,NEW.VERIFY_EMAIL_TYPE,NEW.OPTIMISTICLOCKVERSION,
       NEW.STATUS,NEW.USER_TYPE,NEW.DEPARTMENT_ID,NEW.MERCHANT_ID,action,CURRENT_TIMESTAMP);
END
GO

CREATE TRIGGER TRIGGER_ANA_ACCOUNT_AFTER_UPDATE AFTER UPDATE ON ANA_ACCOUNT FOR EACH ROW
BEGIN
DECLARE action VARCHAR(4);
set action = 'U';
if(NEW.STATUS = 'DEL') then
    set action = 'D';
end if;
INSERT INTO ANA_ACCOUNT_AUD
     (ACCOUNT_ID,ACCOUNT,FIRST_NAME,LAST_NAME,PASSWORD,EMAIL,MOBILE,LANGUAGE,CREATED_TIME,CREATED_BY,
       UPDATED_BY,UPDATED_TIME,IP_ADDRESS,INTERNAL,EXTERNAL_GROUP_ID,VERIFY_EMAIL_TYPE,OPTIMISTICLOCKVERSION,
       STATUS,USER_TYPE,DEPARTMENT_ID,MERCHANT_ID,ACTION,ACTION_TIME)
       VALUES
      (NEW.ID,NEW.ACCOUNT,NEW.FIRST_NAME,NEW.LAST_NAME,NEW.PASSWORD,NEW.EMAIL,NEW.MOBILE,NEW.LANGUAGE,NEW.CREATED_TIME,NEW.CREATED_BY,
       NEW.UPDATED_BY,NEW.UPDATED_TIME,NEW.IP_ADDRESS,NEW.INTERNAL,NEW.EXTERNAL_GROUP_ID,NEW.VERIFY_EMAIL_TYPE,NEW.OPTIMISTICLOCKVERSION,
       NEW.STATUS,NEW.USER_TYPE,NEW.DEPARTMENT_ID,NEW.MERCHANT_ID,action,CURRENT_TIMESTAMP);
END
GO

CREATE TRIGGER TRIGGER_ANA_ACCOUNT_AFTER_DELETE AFTER DELETE ON ana_account FOR EACH ROW
BEGIN
DECLARE action VARCHAR(4);
set action = 'D';
INSERT INTO ANA_ACCOUNT_AUD
      (ACCOUNT_ID,ACCOUNT,FIRST_NAME,LAST_NAME,PASSWORD,EMAIL,MOBILE,LANGUAGE,CREATED_TIME,CREATED_BY,
       UPDATED_BY,UPDATED_TIME,IP_ADDRESS,INTERNAL,EXTERNAL_GROUP_ID,VERIFY_EMAIL_TYPE,OPTIMISTICLOCKVERSION,
       STATUS,USER_TYPE,DEPARTMENT_ID,MERCHANT_ID,ACTION,ACTION_TIME)
       VALUES
      (OLD.ID,OLD.ACCOUNT,OLD.FIRST_NAME,OLD.LAST_NAME,OLD.PASSWORD,OLD.EMAIL,OLD.MOBILE,OLD.LANGUAGE,OLD.CREATED_TIME,OLD.CREATED_BY,
       OLD.UPDATED_BY,OLD.UPDATED_TIME,OLD.IP_ADDRESS,OLD.INTERNAL,OLD.EXTERNAL_GROUP_ID,OLD.VERIFY_EMAIL_TYPE,OLD.OPTIMISTICLOCKVERSION,
       OLD.STATUS,OLD.USER_TYPE,OLD.DEPARTMENT_ID,OLD.MERCHANT_ID,action,CURRENT_TIMESTAMP);
END
GO









CREATE TRIGGER TRIGGER_ANA_ROLE_AFTER_INSERT AFTER INSERT ON ANA_ROLE FOR EACH ROW
BEGIN
DECLARE action VARCHAR(4);
set action = 'C';
INSERT INTO ANA_ROLE_AUD
        (ROLE_ID,APPLICATION_CODE,NAME,DESCRIPTION,CREATE_DATE,LAST_MODIFY_DATE,TYPE,
         IS_ACTIVE,UPDATED_BY,UPDATED_TIME,IP_ADDRESS,OPTIMISTICLOCKVERSION,MID,ACTION,ACTION_TIME)
         VALUES
        (NEW.ID,NEW.APPLICATION_CODE,NEW.NAME,NEW.DESCRIPTION,NEW.CREATE_DATE,NEW.LAST_MODIFY_DATE,NEW.TYPE,
         NEW.IS_ACTIVE,NEW.UPDATED_BY,NEW.UPDATED_TIME,NEW.IP_ADDRESS,NEW.OPTIMISTICLOCKVERSION,NEW.MID,action,CURRENT_TIMESTAMP);
END
GO

CREATE TRIGGER TRIGGER_ANA_ROLE_AFTER_UPDATE AFTER UPDATE ON ANA_ROLE FOR EACH ROW
BEGIN
DECLARE action VARCHAR(4);
set action = 'U';
if(NEW.IS_ACTIVE = 0) then
    set action = 'D';
end if;
INSERT INTO ANA_ROLE_AUD
        (ROLE_ID,APPLICATION_CODE,NAME,DESCRIPTION,CREATE_DATE,LAST_MODIFY_DATE,TYPE,
         IS_ACTIVE,UPDATED_BY,UPDATED_TIME,IP_ADDRESS,OPTIMISTICLOCKVERSION,MID,ACTION,ACTION_TIME)
         VALUES
        (NEW.ID,NEW.APPLICATION_CODE,NEW.NAME,NEW.DESCRIPTION,NEW.CREATE_DATE,NEW.LAST_MODIFY_DATE,NEW.TYPE,
         NEW.IS_ACTIVE,NEW.UPDATED_BY,NEW.UPDATED_TIME,NEW.IP_ADDRESS,NEW.OPTIMISTICLOCKVERSION,NEW.MID,action,CURRENT_TIMESTAMP);
END
GO

CREATE TRIGGER TRIGGER_ANA_ROLE_AFTER_DELETE AFTER DELETE ON ANA_ROLE FOR EACH ROW
BEGIN
DECLARE action VARCHAR(4);
set action = 'D';
INSERT INTO ANA_ROLE_AUD
        (ROLE_ID,APPLICATION_CODE,NAME,DESCRIPTION,CREATE_DATE,LAST_MODIFY_DATE,TYPE,
         IS_ACTIVE,UPDATED_BY,UPDATED_TIME,IP_ADDRESS,OPTIMISTICLOCKVERSION,MID,ACTION,ACTION_TIME)
         VALUES
        (OLD.ID,OLD.APPLICATION_CODE,OLD.NAME,OLD.DESCRIPTION,OLD.CREATE_DATE,OLD.LAST_MODIFY_DATE,OLD.TYPE,
         OLD.IS_ACTIVE,OLD.UPDATED_BY,OLD.UPDATED_TIME,OLD.IP_ADDRESS,OLD.OPTIMISTICLOCKVERSION,OLD.MID,action,CURRENT_TIMESTAMP);
END
GO




